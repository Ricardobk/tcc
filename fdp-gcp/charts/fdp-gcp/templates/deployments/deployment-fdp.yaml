apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: fairdata-main
    app.kubernetes.io/type: app
  name: fairdata-main
spec:
  replicas: {{ .Values.deployments.main.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: fairdata-main
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fairdata-main
    spec:
      initContainers:
      - name: wait-for-dependencies
        image: curlimages/curl:latest
        args:
          - /bin/sh
          - -c
          - while [[ $(curl -sw '%{http_code}' "http://fdp-mongo-service:27017" -o /dev/null) =~ [014-9][0-9][0-9] ]]; do
              sleep 10;
            done
          - /bin/sh
          - -c
          -  while [[ $(curl -sw '%{http_code}' "http://fdp-triple-service:8080/blazegraph" -o /dev/null) =~ [014-9][0-9][0-9] ]]; do
              sleep 10;
            done
      containers:
      - image: {{ .Values.deployments.main.image }}
        name: fdp-main
        resources:
          requests:
            cpu: {{ .Values.deployments.main.cpu_requests }}
            memory: {{ .Values.deployments.main.memory_requests }}
          limits:
            cpu: {{ .Values.deployments.main.cpu_limits }}
            memory: {{ .Values.deployments.main.memory_limits }}
        command: ["/bin/sh", "-c"]  
        args: 
          - cp /etc/config/application.yml ./application.yml && /usr/local/openjdk-16/bin/java -jar app.jar --spring.profiles.active=production --spring.config.location=classpath:/application.yml,classpath:/application.yml,file:/fdp/application.yml
        readinessProbe:
          httpGet:
            path: /
            port: 80
          timeoutSeconds: 5
          initialDelaySeconds: 80
          periodSeconds: 15

        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 10
          failureThreshold: 3
          terminationGracePeriodSeconds: 60

        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
      volumes:
         - name: config-volume
           configMap:
             name: configfile
      nodeSelector:
        cloud.google.com/gke-nodepool: app-pool
